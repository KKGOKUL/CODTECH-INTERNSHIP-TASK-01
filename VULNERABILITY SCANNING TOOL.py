import socket
import requests

# Define common ports for scanning
COMMON_PORTS = [21, 22, 23, 25, 53, 80, 110, 143, 443, 445, 3306, 3389]

def scan_open_ports(target):
    open_ports = []
    print(f"\n[INFO] Scanning common open ports on {target}")
    for port in COMMON_PORTS:
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.settimeout(1)  # Timeout for faster scanning
        result = sock.connect_ex((target, port))
        if result == 0:
            print(f"[OPEN] Port {port} is open.")
            open_ports.append(port)
        sock.close()
    return open_ports

def check_http_headers(url):
    print("\n[INFO] Checking HTTP headers for vulnerabilities")
    try:
        response = requests.get(url)
        headers = response.headers
        
        # Check for HTTP security headers
        if 'X-Frame-Options' not in headers:
            print("[WARNING] X-Frame-Options header is missing.")
        if 'X-XSS-Protection' not in headers:
            print("[WARNING] X-XSS-Protection header is missing.")
        if 'X-Content-Type-Options' not in headers:
            print("[WARNING] X-Content-Type-Options header is missing.")
        if 'Strict-Transport-Security' not in headers:
            print("[WARNING] Strict-Transport-Security header is missing.")
        if 'Content-Security-Policy' not in headers:
            print("[WARNING] Content-Security-Policy header is missing.")
    except requests.RequestException as e:
        print(f"[ERROR] Could not connect to {url}: {e}")

def check_software_versions():
    # Example checks for outdated software versions
    print("\n[INFO] Checking software versions")
    
    # This is a simple version check example. Extend with actual version checks.
    python_version = socket.getfqdn()  # Get local Python version
    print(f"[INFO] Python version: {python_version}")
    if python_version < "3.8":
        print("[WARNING] Python version is outdated. Update to the latest version.")

def vulnerability_scanner(target, url):
    print(f"Starting vulnerability scan on {target} and {url}")

    # Step 1: Open Port Scanning
    open_ports = scan_open_ports(target)
    if open_ports:
        print(f"[INFO] Open ports found: {open_ports}")
    else:
        print("[INFO] No common open ports found.")

    # Step 2: HTTP Security Headers Check
    check_http_headers(url)

    # Step 3: Basic Software Version Checks
    check_software_versions()

    print("\n[INFO] Vulnerability scan completed.")

# Example usage
if __name__ == "__main__":
    target_ip = input("Enter the IP address of the target (e.g., 192.168.1.1): ")
    target_url = input("Enter the URL of the target website (e.g., http://example.com): ")
    
    vulnerability_scanner(target_ip, target_url)
